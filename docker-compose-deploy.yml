services:
  db:
    image: postgres
    volumes:
      - database_data:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres  # Consider using an environment file
    restart: unless-stopped
    container_name: postgres_db2

  app:
    build:
      context: .
    container_name: django_application2
    restart: unless-stopped
    volumes:
      - static_data:/vol/web/static/
      - media_data:/vol/web/media/
    depends_on:
      - db

  proxy:
    build:
      context: ./proxy
    container_name: reverse_proxy1
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - static_data:/vol/static/
      - media_data:/vol/media/
      - ./certbot/conf:/etc/letsencrypt/
      - ./certbot/www:/var/www/certbot/  # Fixed typo here
    depends_on:
      - app

  certbot:
    image: certbot/certbot
    container_name: certbot
    volumes:
      - ./certbot/conf:/etc/letsencrypt/
      - ./certbot/www:/var/www/certbot
    command: certonly --webroot -w /var/www/certbot --keep-until-expiring --email calebchebii9@gmail.com -d chillyme.shop -d www.chillyme.shop --agree-tos
    depends_on:
      - proxy  # Ensures Nginx is running first

volumes:
  database_data:
  static_data:
  media_data:
